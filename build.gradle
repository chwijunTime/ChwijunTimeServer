/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'jacoco'
}

group = 'com.gsm.chwijuntime'
version = '0.0.1-SNAPSHOT'
description = 'ChwijunTime_Server'
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // *** Spring Starter *** //
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'	// data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' //redis
    implementation 'org.springframework.boot:spring-boot-starter-security' //security
    implementation 'org.springframework.boot:spring-boot-starter-validation' //validation
    implementation 'org.springframework.boot:spring-boot-starter-web' 	// starter web
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // *** swagger *** //
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'io.swagger:swagger-models:1.6.2'

    // *** dev tool and test *** //
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'junit:junit:4.13.2'

    // *** querydsl *** //
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    testImplementation 'org.mockito:mockito-core:3.6.28'

    // *** monitoring *** //
    implementation 'io.micrometer:micrometer-registry-prometheus:1.6.5'
    implementation 'io.prometheus:simpleclient_spring_boot:0.11.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

    // *** database *** //
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java'

    // *** lombok *** //
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    // *** jwt *** //
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.0'

    // *** commons *** //
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.junit.platform:junit-platform-commons:1.7.1'
    implementation 'commons-validator:commons-validator:1.6'

    // *** yaml *** //
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

    // *** mapper *** //
    implementation 'org.modelmapper:modelmapper:2.3.9'

    // *** etc *** //
    implementation 'org.ehcache:ehcache:3.9.2'
    implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:6.2.0'
    implementation 'javax.interceptor:javax.interceptor-api:1.2.2'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
